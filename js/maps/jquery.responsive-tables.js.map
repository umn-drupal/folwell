{"version":3,"sources":["jquery.responsive-tables.js"],"names":["$","Drupal","behaviors","folwellResponsiveTables","attach","extend","responsiveTables","breakpoint","length","each","i","className","$this","this","addClass","respondHtml","arrHeaderText","find","$text","text","push","arrColspan","modIndex","c","m","shift","splice","is","parseInt","prop","before","table","attr","scope","tabindex","jQuery"],"mappings":"CAAC,SAAUA,EAAGC,GAEVA,EAAOC,UAAUC,yBACbC,OAAQ,WACJJ,EAAEK,QACEC,iBAAkB,SAAUC,GACxBA,EAAaA,GAAc,QACvBP,EAAE,SAASQ,OAAS,GACpBR,EAAE,SAASS,KAAK,SAAUC,GACtBA,GACA,IAAIC,GAAY,gBAAkBD,EAC9BE,EAAQZ,EAAEa,KACdD,GAAME,SAAS,OACfF,EAAME,SAASH,EAEf,IAAII,GAAc,2BAClBA,IAAe,qCAAuCR,EAAa,QACnE,IAAIS,KACJJ,GAAMK,KAAK,YAAYR,KAAK,SAAUC,EAAGQ,GACrCA,EAAQlB,EAAEa,MAAMM,OAChBT,IACAM,EAAcI,KAAKF,GACnBH,GAAe,MAAQJ,EAAY,yBAA2BD,EAAI,uBAAyBQ,EAAQ,WAEvGN,EAAMK,KAAK,cAAcR,KAAK,SAAUC,GACpC,GAAIE,GAAQZ,EAAEa,KACdH,IACA,IAAIW,MACAC,IACJV,GAAMK,KAAK,MAAMR,KAAK,SAAUC,EAAGa,EAAGC,GAClC,GAAIZ,GAAQZ,EAAEa,KACdH,KACIY,EAAW,IACXA,EAAS,GACTZ,KAEAW,EAAa,IACbG,EAAKd,EAAIW,EAAWI,QAAU,EAC9BH,EAASI,OAAO,EAAG,GACnBJ,EAASF,KAAKI,GACdd,EAAIc,GAEJZ,EAAMe,GAAG,eACTJ,EAAIK,SAAS5B,EAAEa,MAAMgB,KAAK,WAAY,IACtCR,EAAWD,KAAKG,IAEpBX,EAAME,SAAS,YAAcJ,OAGrCK,GAAe,MACfA,GAAe,WACfH,EAAMkB,OAAOf,OAK7B,IAAIgB,GAAQ/B,EAAE,QACd+B,GAAMd,KAAK,YAAYe,MAAMC,MAAS,MAAOC,SAAY,MACzDH,EAAMd,KAAK,MAAMe,KAAK,WAAY,KAClCD,EAAMd,KAAK,YAAYe,MAAMC,MAAS,MAAOC,SAAY,MACzDlC,EAAEM,sBAIZ6B,OAAQlC","file":"../jquery.responsive-tables.js","sourcesContent":["(function ($, Drupal) {\n\n    Drupal.behaviors.folwellResponsiveTables = {\n        attach: function() {\n            $.extend({\n                responsiveTables: function (breakpoint) {\n                    breakpoint = breakpoint || '800px';\n                    if ($('table').length > 0) {\n                        $('table').each(function (i) {\n                            i++;\n                            var className = 'jrt-instance-' + i;\n                            var $this = $(this);\n                            $this.addClass('jrt');\n                            $this.addClass(className);\n          \n                            var respondHtml = '<style type=\"text/css\">\\n';\n                            respondHtml += '@media only screen and (max-width:' + breakpoint + ')  {\\n';\n                            var arrHeaderText = [];\n                            $this.find('thead th').each(function (i, $text) {\n                                $text = $(this).text();\n                                i++;\n                                arrHeaderText.push($text);\n                                respondHtml += '\\t.' + className + '>tbody>tr>td.jrt-cell-' + i + ':before { content: \"' + $text + '\"; }\\n';\n                            });\n                            $this.find('tbody > tr').each(function (i) {\n                                var $this = $(this);\n                                i++;\n                                var arrColspan = [];\n                                var modIndex = [];\n                                $this.find('td').each(function (i, c, m) {\n                                    var $this = $(this);\n                                    i++;\n                                    if (modIndex > 0) {\n                                        modIndex[0];\n                                        i++;\n                                    }\n                                    if (arrColspan > 0) {\n                                        m = (i + arrColspan.shift() - 1);\n                                        modIndex.splice(0, 1);\n                                        modIndex.push(m);\n                                        i = m;\n                                    }\n                                    if ($this.is('[colspan]')) {\n                                        c = parseInt($(this).prop('colspan'), 10);\n                                        arrColspan.push(c);\n                                    }\n                                    $this.addClass('jrt-cell-' + i);\n                                });\n                            });\n                            respondHtml += '}\\n';\n                            respondHtml += '</style>';\n                            $this.before(respondHtml);\n                        });\n                    }\n                }\n            });\n            var table = $('table');\n            table.find('thead th').attr({'scope': 'col', 'tabindex': '0' });\n            table.find('td').attr('tabindex', '0');\n            table.find('tbody th').attr({'scope': 'row', 'tabindex': '0' });\n            $.responsiveTables();\n        }\n    }\n\n}(jQuery, Drupal));\n"]}