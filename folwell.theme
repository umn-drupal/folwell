<?php

/**
 * @file
 * Functions to support theming in the folwell theme.
 */

use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements template_preprocess_html().
 *
 * @param array $variables
 */
function folwell_preprocess_html(&$variables) {
  if (!empty($variables['page']['sidebar_first'])) {
    $sidebar_left = $variables['page']['sidebar_first'];
  }

  if (!empty($variables['page']['sidebar_second'])) {
    $sidebar_right = $variables['page']['sidebar_second'];
  }

  // Dynamic sidebars.
  if (!empty($sidebar_left) && !empty($sidebar_right)) {
    $variables['attributes']['class'][] = 'two-sidebars';
  }
  elseif (empty($sidebar_left) && !empty($sidebar_right)) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-second';
  }
  elseif (!empty($sidebar_left) && empty($sidebar_right)) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-first';
  }
  else {
    $variables['attributes']['class'][] = 'no-sidebars';
  }

  $variables['attributes']['class'][] = theme_get_setting('page_width');

  /* Pass UMN Theme settings to templates */
  $variables['campus_links'] = theme_get_setting('campus_links');
  $dtd_select = theme_get_setting('dtd_select');
  $variables['myu_text'] = theme_get_setting('myu_text');
  $header_color = theme_get_setting('header_color');
  $variables['campus_header'] = theme_get_setting('campus_select');
  $variables['privacy_link'] = theme_get_setting('privacy_link');
  $footer_date = theme_get_setting('footer_date');

  $home_link = [
    'umnhf-campus-tc' => 'https://twin-cities.umn.edu',
    'umnhf-campus-e' => 'http://www.extension.umn.edu',
    'umnhf-campus-c' => 'https://crk.umn.edu',
    'umnhf-campus-m' => 'https://www4.morris.umn.edu',
    'umnhf-campus-d' => 'https://d.umn.edu',
    'umnhf-campus-r' => 'https://r.umn.edu',
    'umnhf-campus-rso' => 'https://twin-cities.umn.edu',
  ];
  $variables['home_link'] = $home_link[$variables['campus_header']];

  if (!empty($footer_date)) {
    $last_updated_node_array = node_get_recent(1);
    if (!empty($last_updated_node_array)) {
      $last_updated_node = array_shift($last_updated_node_array);
      $variables['last_updated'] = date('F j, Y', $last_updated_node->getRevisionCreationTime());
    }
  }

  $variables['mobile_search'] = theme_get_setting('mobile_search');
  $variables['copyright_year'] = date('Y');
  $current_page_url = \Drupal::Request()->getUri();
  $variables['accessibility_reporting_link'] = \Drupal::config('system.site')->get('accessibility_reporting_script') . "?ref_url=$current_page_url";
  $variables['accessibility_reporting_text'] = \Drupal::config('system.site')->get('accessibility_reporting_text');
  $variables['onestop_link'] = 'https://onestop.umn.edu';

  $header_class_array = [
    $variables['campus_header'],
    $dtd_select,
    $header_color,
    $variables['mobile_search'],
    $variables['campus_links']
  ];
  $variables['umn_header_classes'] = implode(' ', $header_class_array);

  $block_manager = \Drupal::service('plugin.manager.block');
  $search_block_instance = $block_manager->createInstance('umn_search_block', array());
  $block_output = $search_block_instance->build();
  $variables['search_block'] = $block_output;

}

/**
 * Implements template_preprocess_page.
 *
 * @param array $variables
 */
function folwell_preprocess_page(&$variables) {

  $site_name = Drupal::configFactory()->get('system.site')->get('name');

  $variables['linked_site_name'] = [
    '#type'  => 'link',
    '#title' => $site_name,
    '#url'   => Url::fromRoute('<front>'),
  ];

  $identity = [
    '#theme' => 'folwell_identity',
  ];

  // Get values for site identity
  $identity['#site_name'] = theme_get_setting('site_name') ? theme_get_setting('site_name') : Drupal::config('system.site')->get('name');
  $identity['#first_line'] = theme_get_setting('first_line');
  $identity['#parent_unit'] = theme_get_setting('parent_unit');
  $identity['#parent_url'] = theme_get_setting('parent_url');
  $identity['#is_home_page'] = Drupal::service('path.matcher')->isFrontPage();

  $identity['#weight'] = -999;

  $variables['page']['identity']['folwell_identity'] = $identity;
  $variables['page']['identity']['#sorted'] = FALSE;
  $variables['page']['identity']['#region'] = 'identity';

}

/**
 * Implements template_preprocess_page_title.
 *
 * @param array $variables
 */
function folwell_preprocess_page_title(&$variables) {
  $variables['is_home_page'] = Drupal::service('path.matcher')->isFrontPage();
}

function folwell_theme($existing, $type, $theme, $path) {
  return [
    'folwell_identity' => [
      'template' => 'folwell-identity',
      'variables' => [
        'site_name' => NULL,
        'first_line' => NULL,
        'parent_unit' => NULL,
        'parent_url' => NULL,
        'is_home_page' => FALSE,
      ]
    ]
  ];
}

/**
 * Implements hook_form_FORM_ID_alter.
 *
 */
function folwell_form_node_layout_builder_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _folwell_form_button_styling($form);
}

/**
 * Implements hook_form_alter.
 */
function folwell_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'layout_builder_discard_changes' ||
      $form_id === 'layout_builder_revert_overrides' ||
      $form_id === 'layout_builder_add_block') {
    _folwell_form_button_styling($form);
  }
}

function _folwell_form_button_styling(&$form) {
  foreach (['submit', 'discard_changes', 'revert', 'cancel'] as $action) {
    if (!array_key_exists($action, $form['actions'])) {
      continue;
    }
    $attributes = array_key_exists(
      '#attributes',
      $form['actions'][$action]
    ) ? $form['actions'][$action]['#attributes'] : [];
    $attributes['class'][] = 'btn';
    $attributes['class'][] = 'bg-maroon';
    $form['actions'][$action]['#attributes'] = $attributes;
  }
}
